{
	// Place your snippets for java here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Print variable": {
		"prefix": "qlog",
		"body": [
			"System.out.println(\"${1} = \" + (${1}));"
		],
		"description": "Print variable"
	},
	"println": {
		"prefix": "print",
		"body": [
			"System.out.println($0);"
		],
		"description": "println"
	},
	"Boilerplate for CS2040": {
		"prefix": "!2040",
		"body": [
			"import java.io.BufferedReader;",
			"import java.io.IOException;",
			"import java.io.InputStreamReader;",
			"import java.io.OutputStreamWriter;",
			"import java.io.PrintWriter;",
			"",
			"/**",
			" * TODO Description",
			" *",
			" * @author Lee Wei Chong Stefan (A0229939J)",
			" */",
			"public class ${1:className} {",
			"    public static void main(String[] args) throws IOException {",
			"        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));",
			"        PrintWriter writer = new PrintWriter(new OutputStreamWriter(System.out));",
			"        ",
			"        int n = Integer.parseInt(reader.readLine());",
			"        String[] line = reader.readLine().split(\" \");",
			"        ",
			"        for (int i = 0; i < n; i++) {",
			"            $0",
			"        }",
			"        ",
			"        reader.close();",
			"        writer.flush();",
			"        writer.close();",
			"    }",
			"}"
		],
		"description": "Boilerplate for CS2040"
	}
}